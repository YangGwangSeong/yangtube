generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id               String    @id @default(uuid()) @db.VarChar(36)
  name             String    @db.VarChar(30)
  email            String    @unique @db.VarChar(60)
  password         String    @db.VarChar(60)
  isVerified       Boolean
  subscribersCount Int?      @default(0)
  description      String    @db.VarChar(120)
  location         String    @db.VarChar(60)
  bannerPath       String    @db.VarChar(60)
  avatarPath       String    @db.VarChar(60)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  comments         Comment[]
  videos           Video[]
}

model Video {
  id            String    @id @default(uuid()) @db.VarChar(36)
  authorId      String
  name          String    @db.VarChar(50)
  isPublic      Boolean
  views         Int?      @default(0)
  like          Int?      @default(0)
  dislike       Int?      @default(0)
  description   String
  videoPath     String
  thumbnailPath String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  comments      Comment[]
  author        User      @relation(fields: [authorId], references: [id])
}

model Comment {
  id        String   @id @default(uuid()) @db.VarChar(36)
  authorId  String
  videoId   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  video     Video    @relation(fields: [videoId], references: [id])
}
